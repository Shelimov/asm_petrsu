# Программа ввода кодов цифровых символов в буфер и вывода сообщений в стандартный вывод.
 

.include "macros.S"

.bss
    .lcomm buf, 100 # буфер для хранения прочитанных символов. Размер - 100 байт
    .lcomm c, 1	# буфер для чтения текущего символа. Размер - 1 байт
	
.text
.global _start

_start:
    sub	%esi, %esi     # указатель адреса байта в буфере символов (индексный регистр)  
    
show_prompt:
    push %eax # заносим в stack eax, чтобы использовать его для операции сравнения
    mov $100, %eax # в eax пишем число 100
    cmp %esi, %eax # производим сравнение через вычитание и пишем результат
                   # вычитания в eax
    pop %eax # возвращаем исходное значение eax
    je print_full_msg # выводим сообщение о полности буфера, проверяя флаг
    Puts "Вводите цифру, друг мой!" 	# макровызов вывода строки на стандартный
					# вывод (подсказка ввода)

kbd_input:
    Getchar $c          # макровызов ввода символа со стандартного ввода
    
    cmpl $0, %eax 	# Конец файл - EOF (введено 0 символов) ? 
    je stop		# Да - на завершение программы
    
    cmpb $'\n', c 	# это символ перевода строки ?
    je parse_char 	# НЕТ - на ввод следующего символа
    cmpb $'9', c  	# код больше кода символа '9' ?
    ja print_err_msg	# ДА - на вывод сообщения об ошибке
    cmpb $'0', c	# код меньше кода символа '0' ?
    jb print_err_msg	# ДА - на вывод сообщения об ошибке

    movb c, %al         # код из с пишем в al
    subb $'0', %al # вычитаем код символа

    movb %al, buf(%esi) # Загрузить содержимое al (введенный символ) в байт по
			# адресу buf + esi (буфер для вводимых символов)
    incl %esi		# указать на следующий адрес буфера для следующего символа

    Puts "Цифра! Хорошо." # вывод сообщения об успешном вводе
    jmp show_prompt	# на ввод следующего символа
parse_char:
    mov $0, %eax
    movb buf(%esi), %al
    jmp kbd_input

print_full_msg:
    Puts "Буфер заполнен до конца. Завершение программы."
    jmp stop

print_err_msg:
    Puts "Не цифровая клавиша. Повторите ввод"	# вывод сообщения об ошибке
    jmp show_prompt 	# на ввод следующего символа

stop:
    Exit $0
    
.end
